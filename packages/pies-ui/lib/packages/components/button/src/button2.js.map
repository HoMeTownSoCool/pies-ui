{"version":3,"file":"button2.js","sources":["../../../../../../components/button/src/button.ts"],"sourcesContent":["import type { ExtractPropTypes, PropType } from 'vue';\nimport type { ButtonType, ButtonSize, ButtonIconPlacement, ButtonNativeType, ButtonHrefTarget } from './interface';\n\nexport const Props = {\n  /** 按钮的类型 */\n  type: {\n    type: String as PropType<ButtonType>,\n    default: (): undefined => undefined,\n    validator(value: ButtonType) {\n      return (['default', 'primary', 'success', 'info', 'warning', 'danger', 'text'] as const).includes(value);\n    }\n  },\n  /** 按钮的大小 */\n  size: {\n    type: String as PropType<ButtonSize>,\n    default: (): undefined => undefined,\n    validator(value: ButtonSize) {\n      return (['small', 'default', 'large'] as const).includes(value);\n    }\n  },\n  /** 是否为次要按钮 */\n  secondary: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 点击跳转的地址，指定此属性 button 的行为和 a 链接一致 */\n  href: {\n    type: String,\n    default: (): String => ''\n  },\n  /** 相当于 a 链接的 target 属性，href 存在时生效*/\n  target: {\n    type: String as PropType<ButtonHrefTarget>,\n    default: (): String => ''\n  },\n  /** 是否为虚线按钮 */\n  dashed: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 按钮是否显示加载状态 */\n  loading: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 按钮是否显示为块级按钮 */\n  block: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 按钮是否禁用 */\n  disabled: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 是否为圆形按钮 */\n  circle: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 按钮是否显示圆角 */\n  round: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 按钮文字是否加粗 */\n  strong: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 按钮的颜色 */\n  color: {\n    type: String,\n    default: (): undefined => undefined\n  },\n  /** 按钮文字的颜色 */\n  textColor: {\n    type: String,\n    default: (): undefined => undefined\n  },\n  /** 按钮上的图标 */\n  icon: {\n    type: String,\n    default: (): undefined => undefined\n  },\n  /** 按钮上的图标的位置 */\n  iconPlacement: {\n    type: String as PropType<ButtonIconPlacement>,\n    default: (): ButtonIconPlacement => 'left',\n    validator(value: ButtonIconPlacement) {\n      return (['left', 'right'] as const).includes(value);\n    }\n  },\n  /** 原生 autofocus 属性 */\n  autofocus: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 是否透明背景 */\n  ghost: {\n    type: Boolean,\n    default: (): Boolean => false\n  },\n  /** 原生按钮类型 */\n  nativeType: {\n    type: String as PropType<ButtonNativeType>,\n    default: (): ButtonNativeType => 'button',\n    validator(value) {\n      return (['button', 'submit', 'reset'] as const).includes(value);\n    }\n  }\n};\n\nexport const Emits = {\n  click: (evt: MouseEvent): MouseEvent => evt\n};\n\nexport type ButtonProps = ExtractPropTypes<typeof Props>;\nexport type ButtonEmits = typeof Emits;\n"],"names":[],"mappings":"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"}